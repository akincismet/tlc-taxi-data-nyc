apiVersion: sparkoperator.k8s.io/v1beta2
kind: SparkApplication
metadata:
  name: load-dimensions
  namespace: default
spec:
  type: Python
  pythonVersion: "3"
  mode: cluster
  image: "spark-load_dimensions:1.0"
  imagePullPolicy: IfNotPresent
  mainApplicationFile: local:///app/load_dimensions/spark_load_dimensions.py
  sparkVersion: "3.5.3"
  timeToLiveSeconds: 3600          # auto-delete CRD & pods 1 h after completion

  deps:
    packages:
      - "org.apache.iceberg:iceberg-spark-runtime-3.5_2.12:1.8.1"
      - "org.apache.iceberg:iceberg-spark-extensions-3.5_2.12:1.8.1"
      - "org.projectnessie.nessie-integrations:nessie-spark-extensions-3.5_2.12:0.102.5"
      - "org.apache.hadoop:hadoop-aws:3.3.4"
      - "org.apache.hadoop:hadoop-common:3.3.4"
    repositories:
      - "https://repo1.maven.org/maven2"

  sparkConf:
    # Iceberg / Nessie
    "spark.sql.catalog.nessie": "org.apache.iceberg.spark.SparkCatalog"
    "spark.sql.catalog.nessie.catalog-impl": "org.apache.iceberg.nessie.NessieCatalog"
    "spark.sql.catalog.nessie.uri": "http://nessie.nessie.svc.cluster.local:19120/api/v2"
    "spark.sql.catalog.nessie.ref": "main"
    "spark.sql.catalog.nessie.warehouse": "s3a://warehouse/"
    "spark.sql.catalog.nessie.s3.endpoint": "http://minio.minio.svc.cluster.local:9000"
    "spark.sql.catalog.nessie.authentication.type": "NONE"
    "spark.sql.extensions": |
      org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions,
      org.projectnessie.spark.extensions.NessieSparkSessionExtensions

    # MinIO / S3A
    "spark.hadoop.fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
    "spark.hadoop.fs.s3a.endpoint": "http://minio.minio.svc.cluster.local:9000"
    "spark.hadoop.fs.s3a.path.style.access": "true"
    "spark.hadoop.fs.s3a.connection.ssl.enabled": "false"
    "spark.hadoop.fs.s3a.access.key": "minioadmin"
    "spark.hadoop.fs.s3a.secret.key": "minioadmin123"

    # Ivy inside pod
    "spark.jars.ivy": "/tmp/.ivy2"

    # Tiny-but-legal footprint (Driver + one Executor)
    "spark.driver.memory": "512m"
    "spark.driver.memoryOverhead": "256m"
    "spark.executor.memory": "512m"
    "spark.executor.memoryOverhead": "256m"
    "spark.executor.instances": "1"
    "spark.kubernetes.driver.request.cores": "200m"
    "spark.kubernetes.executor.request.cores": "200m"

  driver:
    cores: 1                 # JVM uses 1 core; request is 200 m above
    coreLimit: "400m"        # hard CPU cap
    memory: "768m"           # heap + overhead (512 m + 256 m) â†’ container limit
    memoryOverhead: "256m"
    serviceAccount: spark
    volumeMounts:
      - name: ivy-cache
        mountPath: /tmp/.ivy2

  executor:
    instances: 1
    cores: 1
    coreLimit: "400m"
    memory: "768m"
    memoryOverhead: "256m"
    volumeMounts:
      - name: ivy-cache
        mountPath: /tmp/.ivy2

  volumes:
    - name: ivy-cache
      emptyDir: {}
